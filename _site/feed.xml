<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-04-07T19:33:44+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Журнал</title><subtitle>Журнал моих заметок о дизайне, инфографике и визуализации данных.</subtitle><entry><title type="html">Никогда такого не было, и вот опять!</title><link href="http://localhost:4000/event/2021/04/07/Lets-go.html" rel="alternate" type="text/html" title="Никогда такого не было, и вот опять!" /><published>2021-04-07T00:00:00+03:00</published><updated>2021-04-07T00:00:00+03:00</updated><id>http://localhost:4000/event/2021/04/07/Lets-go</id><content type="html" xml:base="http://localhost:4000/event/2021/04/07/Lets-go.html"><![CDATA[<p><a href="https://quillcraft.livejournal.com">LiveJournal</a> уже давно скорее мёртв, чем жив. Такие площадки как <a href="https://www.facebook.com/anton.mizinov">Facebook</a> или <a href="https://twitter.com/anton_mizinov">Twitter</a> совсем не располагают к написанию текстов. При этом есть о чем иногда рассказать, чем поделиться. Поэтому, наконец-то, сподобился запустить свой собственный блог. Буду рассказывать о проектах, инфографике и разработке.
Хостинг и девопс блога осуществляет <a href="https://github.com/quillcraft/quillcraft.github.io">Github</a>, сборка на <a href="https://jekyllrb.com">Jekyll</a>.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1"</span><span class="nt">&gt;</span>
<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"github-markdown.css"</span><span class="nt">&gt;</span>
<span class="nt">&lt;style&gt;</span>
	<span class="nc">.markdown-body</span> <span class="p">{</span>
		<span class="nl">box-sizing</span><span class="p">:</span> <span class="n">border-box</span><span class="p">;</span>
		<span class="nl">min-width</span><span class="p">:</span> <span class="m">200px</span><span class="p">;</span>
		<span class="nl">max-width</span><span class="p">:</span> <span class="m">980px</span><span class="p">;</span>
		<span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="nb">auto</span><span class="p">;</span>
		<span class="nl">padding</span><span class="p">:</span> <span class="m">45px</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">@media</span> <span class="p">(</span><span class="n">max-width</span><span class="p">:</span> <span class="m">767px</span><span class="p">)</span> <span class="p">{</span>
		<span class="nc">.markdown-body</span> <span class="p">{</span>
			<span class="nl">padding</span><span class="p">:</span> <span class="m">15px</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="nt">&lt;/style&gt;</span>
<span class="nt">&lt;article</span> <span class="na">class=</span><span class="s">"markdown-body"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;h1&gt;</span>Unicorns<span class="nt">&lt;/h1&gt;</span>
	<span class="nt">&lt;p&gt;</span>All the things<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;/article&gt;</span>
</code></pre></div></div>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">footer</span> <span class="p">{</span>
	<span class="nl">background-color</span><span class="p">:</span> <span class="m">#ccbbaa</span><span class="p">;</span>
	<span class="nl">position</span><span class="p">:</span> <span class="n">sticky</span><span class="p">;</span>
	<span class="nl">top</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
	<span class="nl">left</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--width</span><span class="p">);</span>
	<span class="nl">right</span><span class="p">:</span> <span class="n">calc</span><span class="p">(</span><span class="m">50%</span> <span class="err">+</span> <span class="m">10vh</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">tilemap</span> <span class="o">=</span> <span class="nx">json</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">try</span> <span class="p">{</span>
                <span class="kd">const</span> <span class="nx">xmlns</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">http://www.w3.org/2000/svg</span><span class="dl">'</span>
                <span class="kd">const</span> <span class="nx">size</span> <span class="o">=</span> <span class="mi">50</span>
                <span class="kd">const</span> <span class="nx">gap</span> <span class="o">=</span> <span class="mi">2</span>
                <span class="kd">const</span> <span class="nx">counties</span> <span class="o">=</span> <span class="p">[...</span><span class="k">new</span> <span class="nb">Set</span><span class="p">(</span><span class="nx">json</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">d</span> <span class="o">=&gt;</span> <span class="nx">d</span><span class="p">.</span><span class="nx">county_ru</span><span class="p">))]</span>

                <span class="kd">const</span> <span class="nx">svg</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">xmlns</span><span class="p">,</span> <span class="dl">'</span><span class="s1">svg</span><span class="dl">'</span><span class="p">)</span>
                <span class="nx">svg</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="dl">'</span><span class="s1">viewbox</span><span class="dl">'</span><span class="p">,</span> <span class="s2">`0 0 </span><span class="p">${</span><span class="nx">size</span> <span class="o">*</span> <span class="mi">17</span><span class="p">}</span><span class="s2"> </span><span class="p">${</span><span class="nx">size</span> <span class="o">*</span> <span class="mi">10</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
                <span class="nx">svg</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="dl">'</span><span class="s1">preserveAspectRatio</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">xMidYMid meet</span><span class="dl">'</span><span class="p">)</span>

                <span class="nx">json</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">tile</span> <span class="o">=&gt;</span> <span class="p">{</span>
                    <span class="kd">const</span> <span class="p">{</span> <span class="nx">id</span><span class="p">,</span> <span class="nx">code</span><span class="p">,</span> <span class="nx">lat</span><span class="p">,</span> <span class="nx">lon</span><span class="p">,</span> <span class="nx">label</span><span class="p">,</span> <span class="nx">name_ru</span><span class="p">,</span> <span class="nx">county_ru</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">tile</span>

                    <span class="kd">const</span> <span class="nx">countyIndex</span> <span class="o">=</span> <span class="nx">counties</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">(</span><span class="nx">d</span> <span class="o">=&gt;</span> <span class="nx">d</span> <span class="o">===</span> <span class="nx">county_ru</span><span class="p">)</span>

                    <span class="kd">const</span> <span class="nx">rect</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">xmlns</span><span class="p">,</span> <span class="dl">'</span><span class="s1">rect</span><span class="dl">'</span><span class="p">)</span>
                    <span class="nx">rect</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="dl">'</span><span class="s1">width</span><span class="dl">'</span><span class="p">,</span> <span class="nx">size</span> <span class="o">-</span> <span class="nx">gap</span><span class="p">)</span>
                    <span class="nx">rect</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="dl">'</span><span class="s1">height</span><span class="dl">'</span><span class="p">,</span> <span class="nx">size</span> <span class="o">-</span> <span class="nx">gap</span><span class="p">)</span>
                    <span class="nx">rect</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">`county-</span><span class="p">${</span><span class="nx">countyIndex</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
                    <span class="nx">rect</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">region</span><span class="dl">'</span><span class="p">)</span>
                    <span class="nx">rect</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">id</span> <span class="o">=</span> <span class="nx">id</span>
                    <span class="nx">rect</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">code</span> <span class="o">=</span> <span class="nx">code</span>
                    <span class="nx">rect</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">region</span> <span class="o">=</span> <span class="nx">name_ru</span>
                    <span class="nx">rect</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">county</span> <span class="o">=</span> <span class="nx">county_ru</span>

                    <span class="kd">const</span> <span class="nx">text</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">xmlns</span><span class="p">,</span> <span class="dl">'</span><span class="s1">text</span><span class="dl">'</span><span class="p">)</span>
                    <span class="nx">text</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="dl">'</span><span class="s1">x</span><span class="dl">'</span><span class="p">,</span> <span class="nx">size</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="nx">gap</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
                    <span class="nx">text</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="dl">'</span><span class="s1">y</span><span class="dl">'</span><span class="p">,</span> <span class="nx">size</span> <span class="o">/</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">-</span> <span class="nx">gap</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
                    <span class="nx">text</span><span class="p">.</span><span class="nx">textContent</span> <span class="o">=</span> <span class="nx">label</span>

                    <span class="kd">const</span> <span class="nx">region</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">xmlns</span><span class="p">,</span> <span class="dl">'</span><span class="s1">g</span><span class="dl">'</span><span class="p">)</span>
                    <span class="nx">region</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="dl">'</span><span class="s1">transform</span><span class="dl">'</span><span class="p">,</span> <span class="s2">`matrix(1 0 0 1 </span><span class="p">${</span><span class="nx">lon</span> <span class="o">*</span> <span class="nx">size</span><span class="p">}</span><span class="s2"> </span><span class="p">${</span><span class="nx">lat</span> <span class="o">*</span> <span class="nx">size</span><span class="p">}</span><span class="s2">)`</span><span class="p">)</span>
                    <span class="nx">region</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="dl">'</span><span class="s1">text-anchor</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">middle</span><span class="dl">'</span><span class="p">)</span>
                    <span class="nx">region</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="dl">'</span><span class="s1">font-family</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">sans-serif</span><span class="dl">'</span><span class="p">)</span>
                    <span class="nx">region</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="dl">'</span><span class="s1">font-size</span><span class="dl">'</span><span class="p">,</span> <span class="nx">size</span> <span class="o">/</span> <span class="mi">4</span><span class="p">)</span>
                    <span class="nx">region</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">rect</span><span class="p">)</span>
                    <span class="nx">region</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span>

                    <span class="nx">svg</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">region</span><span class="p">)</span>
                <span class="p">})</span>

                <span class="nx">resolve</span><span class="p">(</span><span class="nx">svg</span><span class="p">)</span>

            <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">reject</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">})</span>
    <span class="p">}</span>

    <span class="kd">const</span> <span class="nx">getTable</span> <span class="o">=</span> <span class="nx">dataset</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">table</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">table</span><span class="dl">'</span><span class="p">)</span>

        <span class="k">for</span> <span class="p">(</span><span class="nx">key</span> <span class="k">in</span> <span class="nx">dataset</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">key</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">id</span><span class="dl">'</span><span class="p">)</span> <span class="k">continue</span>

            <span class="kd">const</span> <span class="nx">name</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">td</span><span class="dl">'</span><span class="p">)</span>
            <span class="nx">name</span><span class="p">.</span><span class="nx">innerText</span> <span class="o">=</span> <span class="nx">key</span>

            <span class="kd">const</span> <span class="nx">value</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">td</span><span class="dl">'</span><span class="p">)</span>
            <span class="nx">value</span><span class="p">.</span><span class="nx">innerText</span> <span class="o">=</span> <span class="nx">dataset</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span>

            <span class="kd">const</span> <span class="nx">row</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">tr</span><span class="dl">'</span><span class="p">)</span>
            <span class="nx">row</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span>
            <span class="nx">row</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span>

            <span class="nx">table</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">row</span><span class="p">)</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="nx">table</span>
    <span class="p">}</span>

    <span class="kd">const</span> <span class="nx">handlerOver</span> <span class="o">=</span> <span class="nx">popup</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">event</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">event</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="dl">'</span><span class="s1">region</span><span class="dl">'</span><span class="p">))</span> <span class="k">return</span>

            <span class="kd">const</span> <span class="nx">table</span> <span class="o">=</span> <span class="nx">getTable</span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">dataset</span><span class="p">)</span>
            <span class="nx">popup</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">table</span><span class="p">)</span>

            <span class="kd">const</span> <span class="nx">popupRect</span> <span class="o">=</span> <span class="nx">popup</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">()</span>
            <span class="kd">const</span> <span class="nx">regionRect</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">()</span>

            <span class="kd">const</span> <span class="nx">x</span> <span class="o">=</span> <span class="nx">regionRect</span><span class="p">.</span><span class="nx">left</span>
            <span class="kd">const</span> <span class="nx">y</span> <span class="o">=</span> <span class="nx">regionRect</span><span class="p">.</span><span class="nx">top</span> <span class="o">-</span> <span class="nx">popupRect</span><span class="p">.</span><span class="nx">height</span>

            <span class="nx">popup</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">transform</span> <span class="o">=</span> <span class="s2">`translate(</span><span class="p">${</span><span class="nx">x</span><span class="p">}</span><span class="s2">px, </span><span class="p">${</span><span class="nx">y</span><span class="p">}</span><span class="s2">px)`</span>
            <span class="nx">popup</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">active</span><span class="dl">'</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="kd">const</span> <span class="nx">handlerOut</span> <span class="o">=</span> <span class="nx">popup</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="nx">popup</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="dl">'</span><span class="s1">active</span><span class="dl">'</span><span class="p">)</span>
            <span class="nx">popup</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="kc">null</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="kd">const</span> <span class="nx">start</span> <span class="o">=</span> <span class="k">async</span> <span class="nx">url</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="nx">response</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span>
            <span class="kd">const</span> <span class="nx">json</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">()</span>
            <span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">tilemap</span><span class="p">(</span><span class="nx">json</span><span class="p">)</span>

            <span class="kd">const</span> <span class="nx">popup</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">div</span><span class="dl">'</span><span class="p">)</span>
            <span class="nx">popup</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">popup</span><span class="dl">'</span><span class="p">)</span>

            <span class="nx">result</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">mouseover</span><span class="dl">'</span><span class="p">,</span> <span class="nx">handlerOver</span><span class="p">(</span><span class="nx">popup</span><span class="p">),</span> <span class="kc">false</span><span class="p">)</span>
            <span class="nx">result</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">mouseout</span><span class="dl">'</span><span class="p">,</span> <span class="nx">handlerOut</span><span class="p">(</span><span class="nx">popup</span><span class="p">),</span> <span class="kc">false</span><span class="p">)</span>

            <span class="kd">const</span> <span class="nx">body</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">body</span><span class="dl">'</span><span class="p">)</span>
            <span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span>
            <span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">popup</span><span class="p">)</span>

        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="nx">start</span><span class="p">(</span><span class="dl">'</span><span class="s1">tilemap.json</span><span class="dl">'</span><span class="p">)</span>
<span class="p">})()</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="event" /><summary type="html"><![CDATA[LiveJournal уже давно скорее мёртв, чем жив. Такие площадки как Facebook или Twitter совсем не располагают к написанию текстов. При этом есть о чем иногда рассказать, чем поделиться. Поэтому, наконец-то, сподобился запустить свой собственный блог. Буду рассказывать о проектах, инфографике и разработке. Хостинг и девопс блога осуществляет Github, сборка на Jekyll.]]></summary></entry></feed>